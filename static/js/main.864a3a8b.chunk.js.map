{"version":3,"sources":["Components/Navbar.js","Components/TextArea.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","togglemode","role","htmlFor","TextArea","_useState","useState","_useState2","Object","slicedToArray","Text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","text","document","getElementById","select","navigator","clipboard","writeText","split","join","Alert","word","height","alert","charAt","slice","message","prototypes","proptypes","string","isRequired","defaultProps","App","setMode","_useState3","_useState4","msg","setAlert","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.864a3a8b.chunk.js","sourcesContent":["import React from 'react'\r\nimport proptypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n  \r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      {/* <Link className=\"navbar-brand\" to=\"#\">{props.title}</Link> */}\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">About Us</Link>\r\n          </li> */}\r\n          <li className=\"nav-item dropdown\">\r\n            {/* <a className=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"> */}\r\n              {/* Dropdown */}\r\n            {/* </a> */}\r\n            <ul className=\"dropdown-menu\">\r\n              {/* <li><a className=\"dropdown-item\" href=\"#\">Action</a></li> */}\r\n              <li><a className=\"dropdown-item\" href=\"#\">{props.aboutText}</a></li>\r\n              <li><hr className=\"dropdown-divide<lr\"/></li>\r\n              <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n            </ul>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link disabled\">Disabled</a>\r\n          </li> */}\r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n    \r\n  )\r\n}\r\n\r\nNavbar.prototypes={\r\n    title:proptypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps={\r\n    aboutText:'Write About'\r\n}\r\n","import React,{useState} from 'react';\r\n\r\n\r\n\r\nexport default function TextArea(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText= Text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Text converted to upper case\",\"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n      let newText= Text.toLowerCase();\r\n      setText(newText)\r\n      props.showAlert(\"Text converted to lower case\",\"success\");\r\n\r\n  }\r\n    const handleClear= ()=>{\r\n      let newText= '';\r\n      setText(newText)\r\n  }\r\n    const handleOnChange = (event)=>{\r\n        console.log('On change')\r\n        setText(event.target.value )\r\n\r\n    }\r\n    const handleCopy = ()=>{\r\n      var text=document.getElementById(\"mybox\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"Text copied\",\"success\");\r\n\r\n    }\r\n    const handleSpaces =()=>{\r\n      let newText=Text.split(/[ ]+/);// uses javascript Regex\r\n      setText(newText.join(' '))\r\n      props.showAlert(\"Extra spaces from text are removed\",\"success\");\r\n\r\n    }\r\n    const [Text, setText] = useState('');\r\n  return (\r\n    <>\r\n    <div className='container my-2' style={{color: props.mode==='dark'?'white':'#151e3a'}}>   \r\n        <div className=\"mb-3\">\r\n        <label htmlFor=\"mybox\" className=\"form-label\">\r\n        <h1 className='mb-3'>{props.heading}</h1></label>\r\n        <textarea className=\"form-control\" value={Text}  onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white',color: props.mode==='dark'?'white':'#151e3a'}} id=\"mybox\" rows=\"5\"></textarea>\r\n        </div>\r\n        <button disabled={Text.length===0} className=\"btn btn-primary my-2 mx-1\" onClick={handleUpClick}>Convert To UpperCase</button>\r\n        <button disabled={Text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleLoClick}>Convert To LowerCase</button>\r\n        <button disabled={Text.length===0} className=\"btn btn-success mx-2 my-1\" onClick={handleCopy}>Copy Text </button>\r\n        <button disabled={Text.length===0} className=\"btn btn-success mx-2 my-1\" onClick={handleSpaces}>Remove Extra Spaces</button>\r\n        <button disabled={Text.length===0} className=\"btn btn-danger mx-2 my-1\" onClick={handleClear}>Clear Text</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#151e3a'}}>\r\n      <h2>Your text summery</h2>\r\n      <p>{Text.split(\" \").length-1} words and {Text.length} characters</p>\r\n    </div>\r\n    <div className=\"container my-3 \" style={{color: props.mode==='dark'?'white':'#151e3a'}}>\r\n      <h2>Preview</h2>\r\n      <p >{Text.length>0?Text:\"Enter text to preview here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\n// import proptypes from 'prop-types';\r\n\r\nexport default function Alert(props) {\r\n  const capital=(word)=>{\r\n    return word.charAt(0).toUpperCase() + word.slice(1);\r\n  }\r\n  return (\r\n    <div style={{height:'50px'}}>\r\n    {props.alert && <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n        <strong>{capital(props.alert.type)}</strong>: {props.alert.message}\r\n    </div>}\r\n    </div>\r\n  )\r\n}","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextArea from './Components/TextArea';\n// import About from './Components/About';\nimport React, { useState } from 'react';\nimport Alert from './Components/Alert';\n\n /* import {\n   BrowserRouter as Router,\n   Routes,\n   Route,\n   Link\n } from \"react-router-dom\"; */\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [msg, setAlert] = useState(null);\n\n  const showAlert= (message,type)=>{\n    setAlert({\n        message: message,\n        type: type\n\n      })\n      setTimeout(()=>{\n        setAlert(null);\n      },1500);\n   \n  }\n   \n\n  const togglemode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#151e3a';\n      showAlert(\"Dark mode is Enabled\",\"success\");\n      //document.title='Upshots - Dark Mode';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode is Enabled\",\"success\");\n      //document.title='Upshots';\n\n      \n    }\n  }\n  return (\n  <>\n  {/* <Router>  */}\n  <Navbar title=\"Upshots\" mode={mode} togglemode={togglemode}/>\n  <Alert alert={msg} showAlert={showAlert}/>\n  <div className=\"container my-3 \">\n  {/* <Routes>\n    <Route exact path=\"/about\" element={<About/>} /> */}\n    {/* <Route path=\"/\" element={<TextArea heading=\"Try Upshots - Word counter, Character counter,Renove extra spaces\" mode={mode} showAlert={showAlert} />} /> */}\n  {/* </Routes> */}\n  <TextArea heading=\"Try Upshots - Word counter, Character counter,Renove extra spaces\" mode={mode} showAlert={showAlert} />\n  </div>\n  {/* </Router> */}\n  \n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}